// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace SmartAdmin.WebUI.Models
{
    public partial class User
    {
        public User()
        {
            Appointments = new HashSet<Appointment>();
            ContactUs = new HashSet<ContactU>();
            HraAssessments = new HashSet<HraAssessment>();
            OherBookings = new HashSet<OherBooking>();
        }

        [Key]
        public Guid Id { get; set; }
        public long? ClientId { get; set; }
        public int AccessFailedCount { get; set; }
        [StringLength(256)]
        public string Email { get; set; }
        public bool EmailConfirmed { get; set; }
        public bool LockoutEnabled { get; set; }
        public DateTimeOffset? LockoutEnd { get; set; }
        public string PasswordHash { get; set; }
        public string PhoneNumber { get; set; }
        public bool PhoneNumberConfirmed { get; set; }
        [StringLength(256)]
        public string UserName { get; set; }
        [StringLength(256)]
        public string FirstName { get; set; }
        [StringLength(256)]
        public string LastName { get; set; }
        [StringLength(50)]
        public string Gender { get; set; }
        public bool? IsActive { get; set; }
        public DateTime? LastLoginDate { get; set; }
        public DateTime? CreatedOn { get; set; }
        [StringLength(256)]
        public string CreatedBy { get; set; }
        public DateTime? ModifiedOn { get; set; }
        [StringLength(256)]
        public string ModifiedBy { get; set; }
        public long? LoginCount { get; set; }
        [StringLength(50)]
        public string UserPhoto { get; set; }
        [Column("UserTypeID")]
        public Guid? UserTypeId { get; set; }
        public int? LoginAttempts { get; set; }

        [ForeignKey(nameof(ClientId))]
        [InverseProperty("Users")]
        public virtual Client Client { get; set; }
        [InverseProperty(nameof(Appointment.User))]
        public virtual ICollection<Appointment> Appointments { get; set; }
        [InverseProperty(nameof(ContactU.User))]
        public virtual ICollection<ContactU> ContactUs { get; set; }
        [InverseProperty(nameof(HraAssessment.User))]
        public virtual ICollection<HraAssessment> HraAssessments { get; set; }
        [InverseProperty(nameof(OherBooking.User))]
        public virtual ICollection<OherBooking> OherBookings { get; set; }
    }
}